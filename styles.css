@property --gradColor1 {
  syntax: '<color>';
  inherits: true;
  initial-value: rgba(0, 0, 0, 0.375);
}

@property --gradColor2 {
  syntax: '<color>';
  inherits: true;
  initial-value: rgba(0, 0, 0, 0.75);
}

@property --transitionDuration {
  syntax: '<time>';
  inherits: true;
  initial-value: 1s;
}

@font-face {
  font-family: OrpheusPro;
  src: url('./assets/fonts/OrpheusPro.ttf') format(truetype);
}

:root {
  --sand-light: #f5efe0;
  --sand-medium: #e6d7b8;
  --sand-dark: #c4b59d;
  --desert-brown: #8c7355;
  --night-blue: #1e2b3c;
  --text-color: #b19f87;
  --text-inactive-color: #676054;
  --accent-color: #a67c52;
  --txt-circle-color: #cdb69a;
  /* --font-primary: 'Noto Serif', serif; */
  --font-primary: OrpheusPro;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  scrollbar-width: thin;
  scrollbar-color: var(--accent-color) transparent;
  /* scroll-behavior: smooth; */
  vertical-align: bottom;
}

body {
  --gradColor1: rgba(0, 0, 0, 0.375);
  --gradColor2: rgba(0, 0, 0, 0.75);
  --transitionDuration: 1s;
  font-family: var(--font-primary);
  font-weight: 400;
  background-color: var(--sand-light);
  color: var(--text-color);
  line-height: 1.6;
  /* background-image: url('data:image/svg+xml;utf8,<svg width="100" height="100" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><path d="M0 0 L100 0 L100 100 L0 100 Z" fill="none" stroke="%23c4b59d" stroke-width="0.5" stroke-dasharray="1,3" /></svg>'); */
  background: url('./assets/BG-IMG.png'),
    linear-gradient(239.51deg, var(--gradColor1) 0%, var(--gradColor2) 50.89%);
  /* background: linear-gradient(239.51deg, rgba(0, 0, 0, 0.5) 0%, #000000 50.89%); */

  background-blend-mode: darken;
  /* background-size: 100px 100px; */
  background-position: center;
  transition: --gradColor1 var(--transitionDuration) ease-in-out,
    --gradColor2 var(--transitionDuration) ease-in-out;
}

/* added */
img {
  max-width: 100%;
  width: auto;
}

.container {
  /* max-width: 1000px; */
  width: 1366px;
  max-width: 100vw;
  max-height: 100svh;
  min-height: 100svh;
  margin: 0 auto;
  padding: 2rem;
  display: flex;
  flex-direction: column;
}

header {
  text-align: center;
  margin-bottom: 2rem;
  padding-bottom: 1.5rem;
  /* border-bottom: 1px solid var(--sand-dark); */
  width: 100%;
  transition: width var(--transitionDuration) ease-in-out;
}

header h1 {
  font-size: 2.5rem;
  color: var(--night-blue);
  margin-bottom: 0.5rem;
}

header h2 {
  font-size: 1.2rem;
  font-weight: normal;
  font-style: italic;
  color: var(--desert-brown);
}

.chat-container {
  flex: 1;
  gap: 2rem;
  display: none;
  opacity: 0;
  flex-direction: column;
  /* background-color: white; */
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  overflow: hidden;
  font-size: 1.5rem;
  transition-behavior: allow-discrete;
  transition-property: opacity, display;
  transition-timing-function: ease-in-out;
  transition-duration: var(--transitionDuration);
  /* margin-bottom: 2rem; */
  &.show {
    display: flex;
    opacity: 1;
    @starting-style {
      opacity: 0;
    }
  }
}

.chat-messages {
  flex: 1;
  flex-grow: 1;
  overflow-y: auto;
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  /* gap: 1.5rem; */
  max-height: 100%;
  overflow-y: auto;
  scrollbar-gutter: stable;
}

.message {
  padding: 2rem;
  border-radius: 8px;
  /* max-width: 80%; */
  position: relative;
  color: var(--text-inactive-color);
  transition: color var(--transitionDuration) ease-in-out;
}

.message:last-child {
  color: var(--text-color);
}

.message p {
  margin-bottom: 0.5rem;
}

.message p:last-child {
  margin-bottom: 0;
}

.message.user {
  align-self: flex-start;
  /* background-color: var(--sand-medium); */
  /* color: var(--night-blue); */
}

.message.bot {
  position: relative;
  align-self: flex-start;
  /* background-color: var(--night-blue); */
}

/* .message.bot::before { */
.message::after,
.txtCircle {
  --border-width: 1px;
  --diameter: calc(2rem - var(--border-width));
  content: '';
  position: absolute;
  left: calc(var(--diameter) / -1.5);
  top: 50%;
  translate: 0% -50%;
  height: var(--diameter);
  width: var(--diameter);
  border-radius: 50%;
  border: var(--border-width) solid var(--txt-circle-color);
  background-color: var(--txt-circle-color);
  transition: top 0.3s ease, translate 0.3s ease;
  will-change: top, transform;
  /* border-width: 10px 10px 0 0;
  border-style: solid;
  border-color: transparent var(--night-blue) transparent transparent; */
}
.message::before {
  --border-width: 1px;
  --diameter: calc(2rem - var(--border-width));
  content: '';
  position: absolute;
  left: calc((var(--diameter) / -1.5) + var(--diameter) / 2);
  top: 0%;
  height: 100%;
  width: 1px;
  background-color: var(--sand-light);
  opacity: 0.5;
  transition: translate height;
  will-change: height;
  /* border-width: 10px 10px 0 0;
  border-style: solid;
  border-color: transparent var(--night-blue) transparent transparent; */
}
.message:first-child::before {
  top: 50%;
  height: 50%;
}
.message:last-child::before {
  top: 0%;
  height: 50%;
}
.message:last-child:first-child:before {
  height: 0%;
}

.message.user::after {
  background-color: black;
  border-color: var(--txt-circle-color);
}

.txtCircle {
  position: relative;
  top: unset;
  translate: none;
  left: -1rem;
}
/* .message.user::after {
  content: '';
  position: absolute;
  right: -10px;
  top: 20px;
  border-width: 0 10px 10px 0;
  border-style: solid;
  border-color: transparent transparent var(--sand-medium) transparent;
} */

.input-container {
  display: flex;
  place-content: center;
  padding: 1rem;
  padding-inline: 2rem;
  border: 1px solid var(--sand-medium);
  /* background-color: var(--sand-light); */
  border-radius: 200vmax;
  margin-block-start: auto;
  transition: filter 300ms ease;
}
[data-isWaitingForResponse='true'] .input-container {
  filter: saturate(50%);
}
.input-container:has(textarea:focus) {
  border-color: var(--accent-color);
  button#sendButton {
    color: var(--desert-brown);
  }
}

.input-container textarea {
  border: none;
  flex: 1;
  vertical-align: baseline;
  /* border-radius: 4px; */
  resize: none;
  font-family: inherit;
  font-size: 1.5rem;
  line-height: 1.35;
  /* height: 60px; */
  background-color: transparent;
  color: var(--text-color);
}

textarea:focus {
  outline: none;
}
textarea::placeholder {
  color: var(--text-color);
}

button#sendButton {
  background-color: transparent;
  color: white;
  border: none;
  border-radius: 4px;
  width: 60px;
  margin-left: 0.5rem;
  cursor: pointer;
  transition: background-color 0.2s;
  display: flex;
  align-items: center;
  justify-content: end;
}

button#sendButton:hover {
  color: var(--desert-brown);
}

.settings-panel {
  /* display: flex; */
  display: none;
  flex-direction: column;
  gap: 1rem;
  margin-bottom: 2rem;
  padding: 1.5rem;
  /* background-color: white; */
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
}

.llm-selector {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.llm-selector label {
  font-weight: bold;
  color: var(--night-blue);
}

.llm-selector select {
  padding: 0.5rem;
  border: 1px solid var(--sand-medium);
  border-radius: 4px;
  /* background-color: white; */
  font-family: inherit;
}

.theme-selector {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.theme-button {
  padding: 0.5rem 1rem;
  /* background-color: var(--sand-medium); */
  border: none;
  border-radius: 20px;
  cursor: pointer;
  transition: all 0.2s;
  font-family: inherit;
}

.theme-button.active {
  /* background-color: var(--accent-color); */
  color: white;
}

.theme-button:hover {
  /* background-color: var(--desert-brown); */
  color: white;
}

footer {
  display: none;
  text-align: center;
  color: var(--desert-brown);
  font-style: italic;
  padding-top: 1rem;
  /* border-top: 1px solid var(--sand-dark); */
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .container {
    padding: 1rem;
  }

  header h1 {
    font-size: 1.8rem;
  }

  .message {
    max-width: 90%;
  }

  .theme-selector {
    justify-content: center;
  }
}

/* Loading animation */
.typing-indicator {
  display: flex;
  align-items: center;
  gap: 5px;
  padding: 0.5rem 1rem;
}

.typing-indicator span {
  width: 8px;
  height: 8px;
  /* background-color: var(--sand-medium); */
  border-radius: 50%;
  display: inline-block;
  animation: typing 1.4s infinite ease-in-out both;
}

.typing-indicator span:nth-child(1) {
  animation-delay: 0s;
}

.typing-indicator span:nth-child(2) {
  animation-delay: 0.2s;
}

.typing-indicator span:nth-child(3) {
  animation-delay: 0.4s;
}

@keyframes typing {
  0%,
  80%,
  100% {
    transform: scale(0.6);
  }
  40% {
    transform: scale(1);
  }
}

.typing-cursor {
  display: inline-block;
  width: 2px;
  height: 1em;
  background-color: currentColor;
  margin-left: 2px;
  vertical-align: text-bottom;
  animation: blink var(--transitionDuration) step-end infinite;
}

@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

.initialTxt {
  margin-block-start: auto;
  display: block;
  font-size: 40px;
  transition-behavior: allow-discrete;
  opacity: 1;
  transition-property: opacity, display;
  transition-duration: var(--transitionDuration);
  transition-timing-function: ease-in-out;

  &.hide {
    opacity: 0;
    display: none;
  }
  @starting-style {
    opacity: 1;
  }
  button {
    font-size: 32px;
    border-radius: 200vmax;
    font-family: var(--font-primary);
    border: 1px solid transparent;
    padding-inline: 2rem;
    padding-block: 1rem;
    margin-block-start: 2rem;
    color: var(--sand-light);
    background-color: #342e28;
    cursor: pointer;
    transition: border-color 300ms ease-in;
    &:hover {
      border-color: var(--sand-light);
    }
  }
}
